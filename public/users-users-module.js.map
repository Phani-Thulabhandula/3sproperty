{"version":3,"sources":["./src/app/users/user.service.ts","./src/app/users/users-routing.module.ts","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/app/users/users.module.ts"],"names":[],"mappings":"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","file":"users-users-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    user: any = {};\n    token: String = '';\n    public socket;\n\n\n    header: HttpHeaders = new HttpHeaders()\n    constructor(private http: HttpClient) {\n\n        this.token = localStorage.getItem(\"_A_tro_ee\");\n        this.header = this.header.set('Authorization', 'Bearer ' + this.token)\n    }\n\n    updateProfile(data) {\n        return this.http.post('users/update-profile', data, { headers: this.header })\n    }\n\n    getProfile() {\n        return this.http.get('users/getprofile', { headers: this.header })\n    }\n\n    uploadPicture(data) {\n        return this.http.post('/posts/upload', data, { headers: this.header })\n    }\n\n    removeImage(file) {\n        return this.http.delete('/posts/delete-image?filename=' + file, { headers: this.header })\n    };\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UsersComponent } from './users.component';\n\nconst routes: Routes = [{ path: '', component: UsersComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsersRoutingModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../@vex/services/auth.service';\nimport { UserService } from './user.service';\nimport { Router } from '@angular/router';\nimport icUpload from '@iconify/icons-ic/round-cloud-upload';\n\n@Component({\n  selector: 'vex-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit, OnDestroy {\n  userForm: FormGroup;\n  icUpload = icUpload;\n  isSubmitted: Boolean = false;\n  userInfo = {\n    id: \"\",\n    avatar: \"\"\n  };\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private router: Router,\n    private fb: FormBuilder,\n  ) { }\n\n  ngOnInit(): void {\n    if (!this.authService.isLoggedIn$) {\n      this.router.navigate(['']);\n    }\n    this.userInfo = this.authService.userInfo;\n    this.createUserForm();\n    this.getUserInfo()\n  }\n\n  ngOnDestroy(): void {\n    console.log(\"afterDestor\");\n\n  }\n\n  createUserForm() {\n    this.userForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      first_name: ['', [Validators.required, Validators.min(3)]],\n      last_name: ['', [Validators.min(3)]],\n      phone: [null, [Validators.min(8)]],\n      avatar: [null]\n    });\n  }\n\n  getUserInfo() {\n    this.userService.getProfile().subscribe(res => {\n      this.userForm.patchValue(res);\n    }, err => {\n      console.log(err);\n\n    });\n  }\n\n  updateUser() {\n    if (this.userForm.valid) {\n      this.userService.updateProfile(this.userForm.getRawValue()).subscribe(res => {\n        localStorage.removeItem('userInfo');\n        localStorage.setItem('user', JSON.stringify({ ...this.userForm.getRawValue(), name: `${this.userForm.value.first_name} ${this.userForm.value.first_name}`, id: this.userInfo.id }));\n        this.authService.setUserInfo({ ...this.userForm.getRawValue(), name: `${this.userForm.value.first_name} ${this.userForm.value.first_name}` });\n        this.router.navigate(['']);\n      })\n    } else {\n      this.userForm.markAsTouched();\n    }\n  }\n\n  deleteImage() {\n    if (this.userForm.value.avatar) {\n      this.userService.removeImage(this.userForm.value.avatar).subscribe(re => {\n        this.userForm.patchValue({ avatar: \"\" })\n      });\n    }\n\n  }\n\n  handleFileInput(files) {\n    files.forEach(file => {\n      let fd = new FormData();\n      fd.append('image', file);\n      this.userService.uploadPicture(fd).subscribe((res: any) => {\n        this.userForm.patchValue({ avatar: res.filename });\n      });\n    })\n  }\n\n}\n","<div vexContainer class=\"mt-8\">\n    <form fxLayout=\"row\" fxLayoutAlign=\"start start\" [formGroup]=\"userForm\" fxlayoutGap=\"10px\" class=\"w-full\"\n        (ngSubmit)=\"updateUser()\">\n        <div fxFlex=\"22\" class=\"bg-white m-4 w-full\" fxLayout=\"column\">\n            <div class=\"card p-4 hover:underline font-semibold text-primary cursor-pointer\">\n                <h5>Edit Profile</h5>\n            </div>\n            <mat-divider></mat-divider>\n            <div class=\"p-4 text-gray\">\n                <h5>Additional Information</h5>\n            </div>\n        </div>\n        <div fxFlex=\"78\" class=\"rounded m-4 w-full  border-gray-light border card\">\n            <div fxLayout=\"row\" fxFlexAlign=\"center center\" class=\"p-4\">\n                <h2 class=\"font-semibold\">\n                    Edit Profile\n                </h2>\n            </div>\n            <mat-divider></mat-divider>\n            <div class=\"px-gutter my-2\">\n                <h5 class=\"font-semibold\">Basic Information</h5>\n            </div>\n            <div fxLayout=\"row\" fxFlexAlign=\"center center\" class=\"p-4\">\n\n                <div fxFlex=\"30\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                    <div class=\"border-2 border-gray w-full hover:border-black border-dashed hover:text-black\" *ngIf=\"!userForm.get('avatar').value\"\n                        style=\"height: 200px;\" fxFlex=\"85\">\n                        <input class=\"image_upload w-full\" type=\"file\" accept=\"image/*\"\n                            (change)=\"handleFileInput($event.target.files)\" style=\"z-index: 99999;\" />\n                        <div fxLayout=\"column\" fxLayoutAlign=\"center center\"\n                            class=\"mt-8 text-gray hover:text-black cursor-pointer\">\n                            <h3 class=\"font-bold\">Upload Profile Images</h3>\n                            <!-- <img src=\"https://www.xovi.com/wp-content/plugins/all-in-one-seo-pack/images/default-user-image.png\"\n                                style=\"max-width: 50%;max-height: 30%;\" /> -->\n\n                            <mat-icon [icIcon]=\"icUpload\" size=\"70px\" style=\"margin-left: -30px;\"></mat-icon>\n                            <span class=\"mt-12\">Click here or Drag your Image here.</span>\n                        </div>\n                    </div>\n                    <div class=\"p-4 w-full\" *ngIf=\"userForm.get('avatar').value\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                        <img [src]=\"'/images/' + userForm.get('avatar').value\"  style=\"max-width: 100%;max-height: 100%;\"/>\n                        <button class=\"bg-red hover:bg-red text-white font-bold py-2 px-4 my-2 rounded focus:outline-none focus:shadow-outline\" type=\"button\" (click)=\"deleteImage()\">\n                            Remove\n                          </button>\n                    </div>\n                </div>\n                <div fxFlex=\"70\" class=\"p-4 px-8\" fxLayout=\"column\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\" color=\"primary\">\n                        <mat-label>First Name</mat-label>\n                        <input matInput placeholder=\"First Name\" formControlName=\"first_name\">\n                        <mat-hint>This will be your display name.</mat-hint>\n                        <mat-error *ngIf=\"userForm.controls['first_name'].hasError('required')\">\n                            First Name is <strong>required</strong>\n                        </mat-error>\n                        <mat-error\n                            *ngIf=\"userForm.controls['first_name'].invalid && !userForm.controls['first_name'].hasError('required')\">\n                            Must be atleat 3 character.\n\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\" example-full-width\" appearance=\"outline\" color=\"primary\">\n                        <mat-label>Last Name(optional)</mat-label>\n                        <input matInput placeholder=\"Last Name\" formControlName=\"last_name\">\n                        <mat-hint>Enter your last name!</mat-hint>\n                        <mat-error\n                            *ngIf=\"userForm.controls['last_name'].invalid && !userForm.controls['last_name'].hasError('required')\">\n                            Must be atleat 3 character.\n                        </mat-error>\n\n                    </mat-form-field>\n\n                    <!-- <div class=\"w-3/4 border-gray border p-4\">\n                        <p class=\"font-semibold text-gray\">Why is it important?\n                        </p>\n                        <span class=\"text-gray\">\n                            3S property is built on trust. Help other people get to know you. Tell them about the things\n                            you like. And you will see the results…\n                        </span>\n                    </div> -->\n                </div>\n            </div>\n            <mat-divider></mat-divider>\n            <div class=\" px-gutter my-2\">\n                <h5 class=\"font-semibold\">Contact Information</h5>\n            </div>\n            <div fxLayout=\"row\" fxFlexAlign=\"start center\" class=\"px-gutter\">\n                <div fxFlex=\"55\" class=\"p-4 px-8\" fxLayout=\"column\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\" color=\"primary\">\n                        <mat-label>Phone</mat-label>\n                        <input matInput placeholder=\"Enter your phone number\" type=\"number\" formControlName=\"phone\">\n                        <mat-hint>Enter your phone number!</mat-hint>\n                        <mat-error\n                            *ngIf=\"userForm.controls['phone'].invalid && !userForm.controls['phone'].hasError('required')\">\n                            Invalid Phone Number\n                        </mat-error>\n\n                    </mat-form-field>\n                    <mat-form-field class=\" example-full-width\" appearance=\"outline\" color=\"primary\">\n                        <mat-label>Email</mat-label>\n                        <input matInput placeholder=\"Email\" type=\"email\" formControlName=\"email\">\n                        <mat-hint>Enter your email!</mat-hint>\n                        <mat-error *ngIf=\"userForm.controls['email'].hasError('required')\">\n                            Email is <strong>required</strong>\n                        </mat-error>\n                        <mat-error\n                            *ngIf=\"userForm.controls['email'].invalid && !userForm.controls['email'].hasError('required')\">\n                            Invalid Email!\n                        </mat-error>\n\n                    </mat-form-field>\n                </div>\n            </div>\n            <mat-divider></mat-divider>\n            <div fxLayout=\" row\" fxLayoutAlign=\"end center\" class=\"p-4\">\n                <button mat-raised-button color=\"primary\" type=\"submit\">\n                    Save Changes\n                </button>\n            </div>\n        </div>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { MatRippleModule } from '@angular/material/core';\nimport { UsersRoutingModule } from './users-routing.module';\nimport { UsersComponent } from './users.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { ScrollbarModule } from '../../@vex/components/scrollbar/scrollbar.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ContainerModule } from '../../@vex/directives/container/container.module';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [UsersComponent],\n  imports: [\n    CommonModule,\n    UsersRoutingModule,\n    FlexLayoutModule,\n    MatBadgeModule,\n    IconModule,\n    MatRippleModule,\n    MatButtonModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    ScrollingModule,\n    FormsModule,\n    MatMenuModule,\n    ScrollbarModule,\n    ContainerModule,\n    MatDividerModule,\n    MatInputModule,\n    MatFormFieldModule\n  ]\n})\nexport class UsersModule { }\n"],"sourceRoot":"webpack:///"}